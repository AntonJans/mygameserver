version: 2.1

commands:
  apt_get:
    parameters:
      args:
        type: string
    steps:
      - run:
          command: apt-get -y -qq << parameters.args >>
          environment:
            DEBIAN_FRONTEND: noninteractive
  prepare_debian:
    steps:
      - apt_get:
          args: update
      - apt_get:
          # Required for CircleCI `store_*` and `restore_*` operations
          args: install ca-certificates

jobs:
  # Test with Tox, a recent Python version and libraries from PyPI
  test_tox_37:
    docker:
      - image: python:3.7-buster
    steps:
      - checkout
      - run: pip install tox
      # Make sure we have our dependencies, which are not required for Tox but for `make build`
      - run: pip install -e .
      - run: make build
      - run: tox -e py37 -- --junitxml=.tox/py37/log/test-results/pytest/results.xml
      - store_test_results:
          path: .tox/py37/log/test-results
      - store_artifacts:
          path: .tox/py37/log/test-results
          destination: py37/test-results
      - store_artifacts:
          path: .tox/py37/log/htmlcov
          destination: py37/htmlcov

  build_deb_package:
    docker:
      - image: debian:buster
    steps:
      - checkout
      - prepare_debian
      - apt_get:
          args: install --no-install-recommends devscripts dpkg-dev equivs
      # Add `--yes` to mk-build-deps' default options for apt-get
      - run: mk-build-deps --install --tool 'apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends --yes' debian/control
      - run: dpkg-buildpackage --unsigned-changes --unsigned-buildinfo
      - run: |
          mkdir deb-packages
          cp ../*.deb deb-packages/
      - persist_to_workspace:
          root: deb-packages
          paths:
            - "*.deb"
      - store_artifacts:
          path: deb-packages
          destination: deb-packages

  # Test with Python and libraries from Debian Stable sources
  test_debian:
    docker:
      - image: debian:buster
    steps:
      - checkout
      - prepare_debian
      - attach_workspace:
          at: deb-packages
      # Install our package in order to install its dependencies
      - apt_get:
          args: install --no-install-recommends ./deb-packages/*.deb
      - apt_get:
          args: install python3-pytest python3-pytest-cov
      - run: make build
      - run: pytest-3 --junitxml=test-results/pytest/results.xml --cov=src --cov-report=term --cov-report=html tests
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_artifacts:
          path: htmlcov
          destination: htmlcov

workflows:
  version: 2
  workflow:
    jobs:
      - test_tox_37
      - build_deb_package
      - test_debian:
          requires:
            - build_deb_package
